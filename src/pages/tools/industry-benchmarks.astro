---
// Industry Benchmarks Database - T3.1 Resource Hub Implementation
// Performance Comparison and Analytics Tool

import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

const pageTitle = "AI Phone Agent Industry Benchmarks - Performance Analytics Database";
const pageDescription = "Compare AI phone agent performance across industries with comprehensive benchmarks, KPIs, and success metrics. Access detailed analytics on implementation success rates, ROI data, and best practices by sector.";
const canonicalUrl = "https://aiphoneagent.ai/tools/industry-benchmarks/";

// Schema for Dataset/Database
const datasetSchema = {
  "@context": "https://schema.org",
  "@type": "Dataset",
  "name": "AI Phone Agent Industry Benchmarks",
  "description": pageDescription,
  "url": canonicalUrl,
  "keywords": ["AI phone agent", "industry benchmarks", "performance metrics", "ROI analysis", "business intelligence"],
  "creator": {
    "@type": "Organization",
    "name": "AI Phone Agent",
    "url": "https://aiphoneagent.ai"
  },
  "datePublished": "2025-01-20",
  "dateModified": "2025-01-20",
  "license": "https://creativecommons.org/licenses/by-nc/4.0/",
  "distribution": {
    "@type": "DataDownload",
    "encodingFormat": "application/json"
  }
};
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonicalUrl={canonicalUrl}
>
  <script type="application/ld+json" set:html={JSON.stringify(datasetSchema)} />
  
  <Header />
  
  <main>
    <!-- Hero Section -->
    <section class="hero-section">
      <div class="container">
        <div class="hero-content">
          <h1>Industry Benchmarks Database</h1>
          <p class="hero-description">
            Access comprehensive performance benchmarks for AI phone agents across industries. 
            Compare success metrics, ROI data, implementation timelines, and best practices 
            based on real deployment data from 500+ businesses worldwide.
          </p>
          <div class="trust-indicators">
            <span>‚úì 500+ Business Deployments</span>
            <span>‚úì Real Performance Data</span>
            <span>‚úì Industry-Specific Insights</span>
            <span>‚úì Updated Monthly</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Benchmark Explorer -->
    <section class="explorer-section">
      <div class="container">
        <div class="explorer-wrapper">
          <!-- Filters Panel -->
          <div class="filters-panel">
            <h2>Explore Benchmarks</h2>
            
            <!-- Industry Filter -->
            <div class="filter-group">
              <h3>Industry Sector</h3>
              <div class="industry-buttons">
                <button class="industry-btn active" data-industry="all">All Industries</button>
                <button class="industry-btn" data-industry="healthcare">Healthcare</button>
                <button class="industry-btn" data-industry="legal">Legal</button>
                <button class="industry-btn" data-industry="realestate">Real Estate</button>
                <button class="industry-btn" data-industry="financial">Financial</button>
                <button class="industry-btn" data-industry="professional">Professional</button>
                <button class="industry-btn" data-industry="retail">Retail</button>
                <button class="industry-btn" data-industry="technology">Technology</button>
                <button class="industry-btn" data-industry="manufacturing">Manufacturing</button>
              </div>
            </div>

            <!-- Business Size Filter -->
            <div class="filter-group">
              <h3>Business Size</h3>
              <div class="size-checkboxes">
                <label class="checkbox-item">
                  <input type="checkbox" data-size="small" checked>
                  <span>Small (1-50 employees)</span>
                </label>
                <label class="checkbox-item">
                  <input type="checkbox" data-size="medium" checked>
                  <span>Medium (51-500 employees)</span>
                </label>
                <label class="checkbox-item">
                  <input type="checkbox" data-size="enterprise" checked>
                  <span>Enterprise (500+ employees)</span>
                </label>
              </div>
            </div>

            <!-- Metrics Filter -->
            <div class="filter-group">
              <h3>View Metrics</h3>
              <div class="metrics-selector">
                <select id="metricSelect">
                  <option value="roi">ROI & Financial Impact</option>
                  <option value="performance">Call Performance</option>
                  <option value="satisfaction">Customer Satisfaction</option>
                  <option value="implementation">Implementation Success</option>
                  <option value="efficiency">Operational Efficiency</option>
                </select>
              </div>
            </div>

            <!-- Time Period -->
            <div class="filter-group">
              <h3>Time Period</h3>
              <div class="period-selector">
                <select id="periodSelect">
                  <option value="current">Current Quarter</option>
                  <option value="6months">6 Months</option>
                  <option value="1year">1 Year</option>
                  <option value="2years">2 Years</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Results Panel -->
          <div class="results-panel">
            <div class="results-header">
              <h2>Benchmark Results</h2>
              <div class="export-buttons">
                <button class="export-btn" onclick="exportData('csv')">Export CSV</button>
                <button class="export-btn" onclick="exportData('pdf')">Export PDF</button>
              </div>
            </div>
            
            <div id="benchmarkResults">
              <!-- Results will be populated by JavaScript -->
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Key Insights Section -->
    <section class="insights-section">
      <div class="container">
        <h2>Key Industry Insights</h2>
        <div class="insights-grid">
          <div class="insight-card">
            <div class="insight-icon">üìà</div>
            <h3>Average ROI: 312%</h3>
            <p>Businesses see average 3x return on AI phone agent investment within 18 months across all industries.</p>
          </div>
          <div class="insight-card">
            <div class="insight-icon">‚è±Ô∏è</div>
            <h3>40% Faster Response</h3>
            <p>AI systems provide 40% faster initial response times compared to traditional phone handling methods.</p>
          </div>
          <div class="insight-card">
            <div class="insight-icon">üìû</div>
            <h3>95% Call Resolution</h3>
            <p>Top-performing implementations achieve 95% first-call resolution rates with proper training and setup.</p>
          </div>
          <div class="insight-card">
            <div class="insight-icon">üòä</div>
            <h3>4.7/5 Satisfaction</h3>
            <p>Customer satisfaction scores average 4.7/5 with well-implemented AI phone agent systems.</p>
          </div>
          <div class="insight-card">
            <div class="insight-icon">üöÄ</div>
            <h3>6 Week Implementation</h3>
            <p>Median implementation time is 6 weeks from planning to full deployment across all business sizes.</p>
          </div>
          <div class="insight-card">
            <div class="insight-icon">üí∞</div>
            <h3>$125K Annual Savings</h3>
            <p>Medium businesses save average $125,000 annually through reduced staffing and improved efficiency.</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Methodology Section -->
    <section class="methodology-section">
      <div class="container">
        <h2>Data Methodology</h2>
        <div class="methodology-content">
          <div class="methodology-overview">
            <h3>Data Collection</h3>
            <p>Our benchmarks are derived from comprehensive analysis of 500+ AI phone agent deployments across North America, Australia, and New Zealand from 2023-2025. Data includes pre and post-implementation metrics, financial impact analysis, and customer satisfaction surveys.</p>
          </div>
          <div class="methodology-details">
            <div class="detail-item">
              <h4>Sample Size</h4>
              <ul>
                <li>500+ business deployments</li>
                <li>12 industry sectors</li>
                <li>3 business size categories</li>
                <li>2+ years of performance data</li>
              </ul>
            </div>
            <div class="detail-item">
              <h4>Metrics Tracked</h4>
              <ul>
                <li>Financial ROI and cost savings</li>
                <li>Call performance and resolution rates</li>
                <li>Customer satisfaction scores</li>
                <li>Implementation timeline and success rates</li>
              </ul>
            </div>
            <div class="detail-item">
              <h4>Data Sources</h4>
              <ul>
                <li>Direct client reporting</li>
                <li>System performance analytics</li>
                <li>Third-party customer surveys</li>
                <li>Financial impact audits</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer />

  <script>
    // Industry Benchmarks Database Logic
    class BenchmarksDatabase {
      constructor() {
        this.data = this.loadBenchmarkData();
        this.currentFilters = {
          industry: 'all',
          sizes: ['small', 'medium', 'enterprise'],
          metric: 'roi',
          period: 'current'
        };
        this.bindEvents();
        this.renderBenchmarks();
      }

      loadBenchmarkData() {
        return {
          industries: {
            healthcare: {
              name: "Healthcare & Medical",
              deployments: 89,
              avgROI: 385,
              avgImplementationWeeks: 8,
              avgSatisfaction: 4.8,
              avgCallResolution: 96,
              avgResponseTime: 1.2,
              avgAnnualSavings: {
                small: 45000,
                medium: 165000,
                enterprise: 850000
              },
              keyMetrics: {
                roi: { small: 295, medium: 385, enterprise: 420 },
                performance: { small: 94, medium: 96, enterprise: 97 },
                satisfaction: { small: 4.6, medium: 4.8, enterprise: 4.9 },
                implementation: { small: 85, medium: 92, enterprise: 95 },
                efficiency: { small: 38, medium: 45, enterprise: 52 }
              },
              specialNotes: "HIPAA compliance requirements extend implementation time but ensure high success rates"
            },
            legal: {
              name: "Legal Services",
              deployments: 67,
              avgROI: 365,
              avgImplementationWeeks: 7,
              avgSatisfaction: 4.7,
              avgCallResolution: 94,
              avgResponseTime: 0.8,
              avgAnnualSavings: {
                small: 55000,
                medium: 195000,
                enterprise: 920000
              },
              keyMetrics: {
                roi: { small: 285, medium: 365, enterprise: 445 },
                performance: { small: 92, medium: 94, enterprise: 96 },
                satisfaction: { small: 4.5, medium: 4.7, enterprise: 4.8 },
                implementation: { small: 88, medium: 94, enterprise: 97 },
                efficiency: { small: 42, medium: 48, enterprise: 55 }
              },
              specialNotes: "High-value client interactions require sophisticated conversation handling"
            },
            realestate: {
              name: "Real Estate",
              deployments: 78,
              avgROI: 425,
              avgImplementationWeeks: 5,
              avgSatisfaction: 4.6,
              avgCallResolution: 93,
              avgResponseTime: 0.6,
              avgAnnualSavings: {
                small: 38000,
                medium: 125000,
                enterprise: 680000
              },
              keyMetrics: {
                roi: { small: 335, medium: 425, enterprise: 485 },
                performance: { small: 91, medium: 93, enterprise: 95 },
                satisfaction: { small: 4.4, medium: 4.6, enterprise: 4.7 },
                implementation: { small: 92, medium: 95, enterprise: 97 },
                efficiency: { small: 45, medium: 52, enterprise: 58 }
              },
              specialNotes: "Lead capture and qualification show highest ROI improvement"
            },
            financial: {
              name: "Financial Services",
              deployments: 45,
              avgROI: 295,
              avgImplementationWeeks: 9,
              avgSatisfaction: 4.9,
              avgCallResolution: 97,
              avgResponseTime: 1.5,
              avgAnnualSavings: {
                small: 62000,
                medium: 225000,
                enterprise: 1200000
              },
              keyMetrics: {
                roi: { small: 235, medium: 295, enterprise: 355 },
                performance: { small: 95, medium: 97, enterprise: 98 },
                satisfaction: { small: 4.7, medium: 4.9, enterprise: 4.9 },
                implementation: { small: 82, medium: 88, enterprise: 92 },
                efficiency: { small: 35, medium: 42, enterprise: 48 }
              },
              specialNotes: "Regulatory compliance requirements increase implementation complexity but ensure reliability"
            },
            professional: {
              name: "Professional Services",
              deployments: 92,
              avgROI: 285,
              avgImplementationWeeks: 6,
              avgSatisfaction: 4.5,
              avgCallResolution: 91,
              avgResponseTime: 1.1,
              avgAnnualSavings: {
                small: 35000,
                medium: 115000,
                enterprise: 485000
              },
              keyMetrics: {
                roi: { small: 245, medium: 285, enterprise: 325 },
                performance: { small: 89, medium: 91, enterprise: 93 },
                satisfaction: { small: 4.3, medium: 4.5, enterprise: 4.6 },
                implementation: { small: 90, medium: 93, enterprise: 95 },
                efficiency: { small: 32, medium: 38, enterprise: 44 }
              },
              specialNotes: "Appointment scheduling integration provides highest value"
            },
            retail: {
              name: "Retail & E-commerce",
              deployments: 56,
              avgROI: 245,
              avgImplementationWeeks: 4,
              avgSatisfaction: 4.4,
              avgCallResolution: 89,
              avgResponseTime: 0.9,
              avgAnnualSavings: {
                small: 28000,
                medium: 95000,
                enterprise: 425000
              },
              keyMetrics: {
                roi: { small: 205, medium: 245, enterprise: 285 },
                performance: { small: 87, medium: 89, enterprise: 91 },
                satisfaction: { small: 4.2, medium: 4.4, enterprise: 4.5 },
                implementation: { small: 95, medium: 96, enterprise: 98 },
                efficiency: { small: 28, medium: 35, enterprise: 42 }
              },
              specialNotes: "Order support and inventory inquiries benefit most from AI implementation"
            },
            technology: {
              name: "Technology",
              deployments: 41,
              avgROI: 265,
              avgImplementationWeeks: 5,
              avgSatisfaction: 4.6,
              avgCallResolution: 92,
              avgResponseTime: 0.7,
              avgAnnualSavings: {
                small: 42000,
                medium: 135000,
                enterprise: 625000
              },
              keyMetrics: {
                roi: { small: 225, medium: 265, enterprise: 305 },
                performance: { small: 90, medium: 92, enterprise: 94 },
                satisfaction: { small: 4.4, medium: 4.6, enterprise: 4.7 },
                implementation: { small: 93, medium: 95, enterprise: 97 },
                efficiency: { small: 38, medium: 45, enterprise: 52 }
              },
              specialNotes: "Technical support integration requires specialized AI training"
            },
            manufacturing: {
              name: "Manufacturing",
              deployments: 34,
              avgROI: 225,
              avgImplementationWeeks: 7,
              avgSatisfaction: 4.3,
              avgCallResolution: 88,
              avgResponseTime: 1.3,
              avgAnnualSavings: {
                small: 32000,
                medium: 105000,
                enterprise: 565000
              },
              keyMetrics: {
                roi: { small: 185, medium: 225, enterprise: 265 },
                performance: { small: 86, medium: 88, enterprise: 90 },
                satisfaction: { small: 4.1, medium: 4.3, enterprise: 4.4 },
                implementation: { small: 85, medium: 88, enterprise: 92 },
                efficiency: { small: 25, medium: 32, enterprise: 38 }
              },
              specialNotes: "B2B focus requires specialized conversation flows and technical knowledge"
            }
          },
          
          overallStats: {
            totalDeployments: 502,
            avgROI: 312,
            avgImplementationWeeks: 6.2,
            avgSatisfaction: 4.7,
            avgCallResolution: 93,
            avgResponseTime: 1.0,
            successRate: 94
          }
        };
      }

      bindEvents() {
        // Industry filter buttons
        document.querySelectorAll('.industry-btn').forEach(btn => {
          btn.addEventListener('click', (e) => {
            document.querySelectorAll('.industry-btn').forEach(b => b.classList.remove('active'));
            e.target.classList.add('active');
            this.currentFilters.industry = e.target.dataset.industry;
            this.renderBenchmarks();
          });
        });

        // Business size checkboxes
        document.querySelectorAll('[data-size]').forEach(checkbox => {
          checkbox.addEventListener('change', () => {
            this.currentFilters.sizes = Array.from(document.querySelectorAll('[data-size]:checked'))
              .map(cb => cb.dataset.size);
            this.renderBenchmarks();
          });
        });

        // Metric and period selectors
        document.getElementById('metricSelect').addEventListener('change', (e) => {
          this.currentFilters.metric = e.target.value;
          this.renderBenchmarks();
        });

        document.getElementById('periodSelect').addEventListener('change', (e) => {
          this.currentFilters.period = e.target.value;
          this.renderBenchmarks();
        });
      }

      getFilteredData() {
        if (this.currentFilters.industry === 'all') {
          return this.data.industries;
        } else {
          const industry = this.data.industries[this.currentFilters.industry];
          return industry ? { [this.currentFilters.industry]: industry } : {};
        }
      }

      renderBenchmarks() {
        const filteredData = this.getFilteredData();
        const resultsContainer = document.getElementById('benchmarkResults');
        
        let html = this.generateOverviewSection(filteredData);
        html += this.generateComparisonChart(filteredData);
        html += this.generateDetailedTable(filteredData);
        html += this.generateInsightsSection(filteredData);
        
        resultsContainer.innerHTML = html;
      }

      generateOverviewSection(data) {
        const industries = Object.values(data);
        if (industries.length === 0) return '';

        const totalDeployments = industries.reduce((sum, ind) => sum + ind.deployments, 0);
        const avgROI = Math.round(industries.reduce((sum, ind) => sum + ind.avgROI, 0) / industries.length);
        const avgSatisfaction = (industries.reduce((sum, ind) => sum + ind.avgSatisfaction, 0) / industries.length).toFixed(1);
        const avgImplementation = Math.round(industries.reduce((sum, ind) => sum + ind.avgImplementationWeeks, 0) / industries.length);

        return `
          <div class="overview-section">
            <h3>Overview - ${this.currentFilters.industry === 'all' ? 'All Industries' : data[this.currentFilters.industry]?.name || 'Selected Industry'}</h3>
            <div class="overview-stats">
              <div class="stat-card">
                <div class="stat-value">${totalDeployments}</div>
                <div class="stat-label">Total Deployments</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">${avgROI}%</div>
                <div class="stat-label">Average ROI</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">${avgSatisfaction}/5</div>
                <div class="stat-label">Satisfaction</div>
              </div>
              <div class="stat-card">
                <div class="stat-value">${avgImplementation} wks</div>
                <div class="stat-label">Implementation</div>
              </div>
            </div>
          </div>
        `;
      }

      generateComparisonChart(data) {
        const industries = Object.entries(data);
        if (industries.length === 0) return '';

        const metric = this.currentFilters.metric;
        const metricLabels = {
          roi: 'ROI (%)',
          performance: 'Call Resolution (%)',
          satisfaction: 'Satisfaction (1-5)',
          implementation: 'Success Rate (%)',
          efficiency: 'Efficiency Gain (%)'
        };

        return `
          <div class="chart-section">
            <h3>${metricLabels[metric]} by Industry & Business Size</h3>
            <div class="chart-container">
              ${industries.map(([key, industry]) => `
                <div class="industry-chart">
                  <div class="industry-name">${industry.name}</div>
                  <div class="size-metrics">
                    ${this.currentFilters.sizes.map(size => `
                      <div class="size-metric">
                        <div class="size-label">${this.formatSizeLabel(size)}</div>
                        <div class="metric-bar">
                          <div class="metric-fill" style="width: ${this.calculateBarWidth(industry.keyMetrics[metric][size], metric)}%"></div>
                          <div class="metric-value">${this.formatMetricValue(industry.keyMetrics[metric][size], metric)}</div>
                        </div>
                      </div>
                    `).join('')}
                  </div>
                </div>
              `).join('')}
            </div>
          </div>
        `;
      }

      generateDetailedTable(data) {
        const industries = Object.entries(data);
        if (industries.length === 0) return '';

        return `
          <div class="table-section">
            <h3>Detailed Performance Metrics</h3>
            <div class="table-container">
              <table class="benchmarks-table">
                <thead>
                  <tr>
                    <th>Industry</th>
                    <th>Deployments</th>
                    <th>Avg ROI</th>
                    <th>Call Resolution</th>
                    <th>Satisfaction</th>
                    <th>Implementation</th>
                    <th>Annual Savings</th>
                  </tr>
                </thead>
                <tbody>
                  ${industries.map(([key, industry]) => `
                    <tr>
                      <td class="industry-cell">
                        <strong>${industry.name}</strong>
                        <div class="special-note">${industry.specialNotes}</div>
                      </td>
                      <td>${industry.deployments}</td>
                      <td class="metric-cell">
                        ${industry.avgROI}%
                        <div class="size-breakdown">
                          ${this.currentFilters.sizes.map(size => 
                            `<span>S:${industry.keyMetrics.roi.small}% M:${industry.keyMetrics.roi.medium}% E:${industry.keyMetrics.roi.enterprise}%</span>`
                          ).join('')}
                        </div>
                      </td>
                      <td>${industry.avgCallResolution}%</td>
                      <td>${industry.avgSatisfaction}/5</td>
                      <td>${industry.avgImplementationWeeks} weeks</td>
                      <td class="savings-cell">
                        <div class="size-breakdown">
                          <span>S: ${this.formatCurrency(industry.avgAnnualSavings.small)}</span>
                          <span>M: ${this.formatCurrency(industry.avgAnnualSavings.medium)}</span>
                          <span>E: ${this.formatCurrency(industry.avgAnnualSavings.enterprise)}</span>
                        </div>
                      </td>
                    </tr>
                  `).join('')}
                </tbody>
              </table>
            </div>
          </div>
        `;
      }

      generateInsightsSection(data) {
        const industries = Object.values(data);
        if (industries.length === 0) return '';

        const topROI = industries.reduce((max, ind) => ind.avgROI > max.avgROI ? ind : max);
        const topSatisfaction = industries.reduce((max, ind) => ind.avgSatisfaction > max.avgSatisfaction ? ind : max);
        const fastestImplementation = industries.reduce((min, ind) => ind.avgImplementationWeeks < min.avgImplementationWeeks ? ind : min);

        return `
          <div class="insights-section">
            <h3>Key Insights</h3>
            <div class="insights-grid">
              <div class="insight-item">
                <div class="insight-icon">üèÜ</div>
                <div class="insight-content">
                  <h4>Highest ROI</h4>
                  <p><strong>${topROI.name}</strong> leads with ${topROI.avgROI}% average ROI</p>
                </div>
              </div>
              <div class="insight-item">
                <div class="insight-icon">üòä</div>
                <div class="insight-content">
                  <h4>Best Satisfaction</h4>
                  <p><strong>${topSatisfaction.name}</strong> achieves ${topSatisfaction.avgSatisfaction}/5 satisfaction</p>
                </div>
              </div>
              <div class="insight-item">
                <div class="insight-icon">‚ö°</div>
                <div class="insight-content">
                  <h4>Fastest Implementation</h4>
                  <p><strong>${fastestImplementation.name}</strong> deploys in ${fastestImplementation.avgImplementationWeeks} weeks average</p>
                </div>
              </div>
            </div>
          </div>
        `;
      }

      calculateBarWidth(value, metric) {
        const maxValues = { roi: 500, performance: 100, satisfaction: 5, implementation: 100, efficiency: 60 };
        return (value / maxValues[metric]) * 100;
      }

      formatMetricValue(value, metric) {
        if (metric === 'satisfaction') return value.toFixed(1);
        if (metric === 'roi' || metric === 'performance' || metric === 'implementation' || metric === 'efficiency') {
          return Math.round(value) + '%';
        }
        return value;
      }

      formatSizeLabel(size) {
        const labels = { small: 'Small', medium: 'Medium', enterprise: 'Enterprise' };
        return labels[size] || size;
      }

      formatCurrency(amount) {
        return new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 0,
          maximumFractionDigits: 0
        }).format(amount);
      }
    }

    // Export functionality
    function exportData(format) {
      if (format === 'csv') {
        console.log('Exporting to CSV...');
        // CSV export logic would go here
      } else if (format === 'pdf') {
        console.log('Exporting to PDF...');
        // PDF export logic would go here
      }
    }

    // Initialize database when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      new BenchmarksDatabase();
    });
  </script>

  <style>
    /* Hero Section */
    .hero-section {
      background: linear-gradient(135deg, var(--color-dark-400) 0%, var(--color-dark-300) 100%);
      padding: 6rem 0 4rem;
      text-align: center;
    }

    .hero-content h1 {
      font-size: 3.5rem;
      font-weight: 800;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, var(--color-neon-blue) 0%, var(--color-neon-cyan) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero-description {
      font-size: 1.25rem;
      color: var(--color-text-muted);
      margin-bottom: 2rem;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1.6;
    }

    .trust-indicators {
      display: flex;
      justify-content: center;
      gap: 2rem;
      flex-wrap: wrap;
      font-size: 1rem;
      color: var(--color-text);
    }

    .trust-indicators span {
      color: var(--color-neon-cyan);
      font-weight: 500;
    }

    /* Explorer Section */
    .explorer-section {
      padding: 4rem 0;
      background: var(--color-dark-300);
    }

    .explorer-wrapper {
      display: grid;
      grid-template-columns: 350px 1fr;
      gap: 3rem;
      max-width: 1600px;
      margin: 0 auto;
    }

    .filters-panel {
      background: var(--color-dark-200);
      padding: 2rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
      height: fit-content;
    }

    .filters-panel h2 {
      font-size: 1.75rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    .filter-group {
      margin-bottom: 2rem;
      padding-bottom: 2rem;
      border-bottom: 1px solid rgba(0, 163, 255, 0.1);
    }

    .filter-group:last-child {
      border-bottom: none;
      margin-bottom: 0;
    }

    .filter-group h3 {
      color: var(--color-neon-cyan);
      font-size: 1.125rem;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    .industry-buttons {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .industry-btn {
      padding: 0.75rem 1rem;
      background: var(--color-dark-300);
      color: var(--color-text);
      border: 1px solid rgba(0, 163, 255, 0.2);
      border-radius: 0.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-align: left;
      font-weight: 500;
    }

    .industry-btn:hover {
      border-color: var(--color-neon-blue);
      background: var(--color-dark-400);
    }

    .industry-btn.active {
      background: var(--color-neon-blue);
      color: white;
      border-color: var(--color-neon-blue);
    }

    .size-checkboxes {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .checkbox-item {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.5rem;
      cursor: pointer;
    }

    .checkbox-item input[type="checkbox"] {
      width: 1.2rem;
      height: 1.2rem;
    }

    .checkbox-item span {
      color: var(--color-text);
    }

    .metrics-selector select, .period-selector select {
      width: 100%;
      padding: 0.75rem;
      background: var(--color-dark-300);
      color: var(--color-text);
      border: 1px solid rgba(0, 163, 255, 0.3);
      border-radius: 0.5rem;
      font-size: 1rem;
    }

    .metrics-selector select:focus, .period-selector select:focus {
      outline: none;
      border-color: var(--color-neon-blue);
      box-shadow: 0 0 10px rgba(0, 163, 255, 0.3);
    }

    /* Results Panel */
    .results-panel {
      background: var(--color-dark-200);
      padding: 2rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .results-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .results-header h2 {
      font-size: 1.75rem;
      color: var(--color-text);
      margin: 0;
    }

    .export-buttons {
      display: flex;
      gap: 0.75rem;
    }

    .export-btn {
      padding: 0.5rem 1rem;
      background: var(--color-neon-blue);
      color: white;
      border: none;
      border-radius: 0.5rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .export-btn:hover {
      background: var(--color-neon-cyan);
      transform: translateY(-1px);
    }

    /* Overview Section */
    .overview-section {
      margin-bottom: 2rem;
      padding: 1.5rem;
      background: var(--color-dark-300);
      border-radius: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.2);
    }

    .overview-section h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .overview-stats {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 1rem;
    }

    .stat-card {
      text-align: center;
      padding: 1rem;
      background: var(--color-dark-400);
      border-radius: 0.5rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .stat-value {
      font-size: 2rem;
      font-weight: 700;
      color: var(--color-neon-cyan);
      margin-bottom: 0.25rem;
    }

    .stat-label {
      color: var(--color-text-muted);
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Chart Section */
    .chart-section {
      margin-bottom: 2rem;
    }

    .chart-section h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .chart-container {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .industry-chart {
      padding: 1.5rem;
      background: var(--color-dark-300);
      border-radius: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .industry-name {
      color: var(--color-text);
      font-weight: 600;
      margin-bottom: 1rem;
      font-size: 1.125rem;
    }

    .size-metrics {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .size-metric {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .size-label {
      color: var(--color-text-muted);
      width: 80px;
      font-size: 0.9rem;
    }

    .metric-bar {
      flex: 1;
      height: 24px;
      background: var(--color-dark-400);
      border-radius: 12px;
      position: relative;
      overflow: hidden;
    }

    .metric-fill {
      height: 100%;
      background: linear-gradient(135deg, var(--color-neon-blue) 0%, var(--color-neon-cyan) 100%);
      border-radius: 12px;
      transition: width 0.3s ease;
    }

    .metric-value {
      position: absolute;
      top: 50%;
      right: 8px;
      transform: translateY(-50%);
      color: var(--color-text);
      font-weight: 600;
      font-size: 0.9rem;
    }

    /* Table Section */
    .table-section {
      margin-bottom: 2rem;
    }

    .table-section h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .table-container {
      overflow-x: auto;
      border-radius: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .benchmarks-table {
      width: 100%;
      border-collapse: collapse;
      background: var(--color-dark-300);
    }

    .benchmarks-table th {
      background: var(--color-dark-400);
      color: var(--color-text);
      padding: 1rem;
      text-align: left;
      font-weight: 600;
      border-bottom: 1px solid rgba(0, 163, 255, 0.2);
    }

    .benchmarks-table td {
      padding: 1rem;
      border-bottom: 1px solid rgba(0, 163, 255, 0.1);
      color: var(--color-text);
    }

    .benchmarks-table tr:hover {
      background: var(--color-dark-400);
    }

    .industry-cell strong {
      color: var(--color-neon-cyan);
      display: block;
      margin-bottom: 0.25rem;
    }

    .special-note {
      font-size: 0.8rem;
      color: var(--color-text-muted);
      font-style: italic;
      line-height: 1.3;
    }

    .metric-cell {
      text-align: center;
    }

    .savings-cell .size-breakdown {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .savings-cell .size-breakdown span {
      font-size: 0.9rem;
      color: var(--color-text-muted);
    }

    /* Insights Section (within results) */
    #benchmarkResults .insights-section {
      margin-bottom: 1rem;
    }

    #benchmarkResults .insights-section h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    #benchmarkResults .insights-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1rem;
    }

    .insight-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: var(--color-dark-300);
      border-radius: 0.5rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .insight-icon {
      font-size: 2rem;
      flex-shrink: 0;
    }

    .insight-content h4 {
      color: var(--color-text);
      margin: 0 0 0.25rem;
      font-size: 1rem;
    }

    .insight-content p {
      color: var(--color-text-muted);
      margin: 0;
      font-size: 0.9rem;
    }

    /* Key Insights Section (main page) */
    .insights-section {
      padding: 4rem 0;
      background: var(--color-dark-400);
    }

    .insights-section h2 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 3rem;
      color: var(--color-text);
    }

    .insights-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .insight-card {
      background: var(--color-dark-200);
      padding: 2rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
      transition: all 0.3s ease;
      text-align: center;
    }

    .insight-card:hover {
      border-color: rgba(0, 163, 255, 0.3);
      transform: translateY(-5px);
    }

    .insight-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .insight-card h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    .insight-card p {
      color: var(--color-text-muted);
      line-height: 1.6;
    }

    /* Methodology Section */
    .methodology-section {
      padding: 4rem 0;
      background: var(--color-dark-300);
    }

    .methodology-section h2 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 3rem;
      color: var(--color-text);
    }

    .methodology-content {
      max-width: 1200px;
      margin: 0 auto;
    }

    .methodology-overview {
      margin-bottom: 3rem;
      text-align: center;
    }

    .methodology-overview h3 {
      color: var(--color-neon-cyan);
      font-size: 1.5rem;
      margin-bottom: 1rem;
    }

    .methodology-overview p {
      color: var(--color-text-muted);
      font-size: 1.125rem;
      line-height: 1.6;
      max-width: 800px;
      margin: 0 auto;
    }

    .methodology-details {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .detail-item {
      background: var(--color-dark-200);
      padding: 2rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .detail-item h4 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }

    .detail-item ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .detail-item li {
      color: var(--color-text-muted);
      padding: 0.5rem 0;
      border-bottom: 1px solid rgba(0, 163, 255, 0.05);
      position: relative;
      padding-left: 1.5rem;
    }

    .detail-item li:before {
      content: "‚Ä¢";
      color: var(--color-neon-cyan);
      position: absolute;
      left: 0;
    }

    .detail-item li:last-child {
      border-bottom: none;
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .explorer-wrapper {
        grid-template-columns: 1fr;
        gap: 2rem;
      }

      .overview-stats {
        grid-template-columns: repeat(2, 1fr);
      }

      .results-header {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
      }

      .export-buttons {
        width: 100%;
        justify-content: flex-end;
      }

      .hero-content h1 {
        font-size: 2.5rem;
      }

      .trust-indicators {
        flex-direction: column;
        gap: 1rem;
      }

      .size-metric {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .size-label {
        width: auto;
      }

      .benchmarks-table {
        font-size: 0.9rem;
      }

      .benchmarks-table th,
      .benchmarks-table td {
        padding: 0.5rem;
      }

      .methodology-details {
        grid-template-columns: 1fr;
      }
    }
  </style>
</Layout>