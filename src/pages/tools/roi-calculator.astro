---
// Enhanced ROI Calculator - T3.1 Resource Hub Implementation
// Comprehensive Business Impact Calculator with Advanced Features

import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

const pageTitle = "AI Phone Agent ROI Calculator - Calculate Your Business Impact";
const pageDescription = "Comprehensive ROI calculator for AI phone agents. Calculate cost savings, efficiency gains, revenue impact, and multi-year projections for your business with industry-specific analysis.";
const canonicalUrl = "https://aiphoneagent.ai/tools/roi-calculator/";

// Schema for Tools/Calculator
const toolSchema = {
  "@context": "https://schema.org",
  "@type": "SoftwareApplication",
  "name": "AI Phone Agent ROI Calculator",
  "description": pageDescription,
  "url": canonicalUrl,
  "applicationCategory": "BusinessApplication",
  "operatingSystem": "Web",
  "offers": {
    "@type": "Offer",
    "price": "0",
    "priceCurrency": "USD"
  },
  "author": {
    "@type": "Organization",
    "name": "AI Phone Agent",
    "url": "https://aiphoneagent.ai"
  },
  "datePublished": "2025-01-20",
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": "4.9",
    "reviewCount": "127"
  }
};
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonicalUrl={canonicalUrl}
>
  <script type="application/ld+json" set:html={JSON.stringify(toolSchema)} />
  
  <Header />
  
  <main>
    <!-- Hero Section -->
    <section class="hero-section">
      <div class="container">
        <div class="hero-content">
          <h1>AI Phone Agent ROI Calculator</h1>
          <p class="hero-description">
            Calculate the complete business impact of implementing AI phone agents. 
            Get detailed cost analysis, efficiency gains, revenue projections, and multi-year ROI 
            with industry-specific insights tailored to your business.
          </p>
          <div class="trust-indicators">
            <span>‚úì Industry-Specific Analysis</span>
            <span>‚úì Multi-Year Projections</span>
            <span>‚úì Comprehensive Cost Modeling</span>
          </div>
        </div>
      </div>
    </section>

    <!-- ROI Calculator Tool -->
    <section class="calculator-section">
      <div class="container">
        <div class="calculator-wrapper">
          <!-- Input Panel -->
          <div class="input-panel">
            <h2>Business Information</h2>
            
            <!-- Business Basics -->
            <div class="input-group">
              <h3>Company Details</h3>
              <div class="form-row">
                <div class="form-field">
                  <label for="businessSize">Business Size</label>
                  <select id="businessSize">
                    <option value="small">Small Business (1-50 employees)</option>
                    <option value="medium">Medium Business (51-500 employees)</option>
                    <option value="enterprise">Enterprise (500+ employees)</option>
                  </select>
                </div>
                <div class="form-field">
                  <label for="industry">Industry</label>
                  <select id="industry">
                    <option value="healthcare">Healthcare & Medical</option>
                    <option value="legal">Legal Services</option>
                    <option value="realestate">Real Estate</option>
                    <option value="financial">Financial Services</option>
                    <option value="professional">Professional Services</option>
                    <option value="retail">Retail & E-commerce</option>
                    <option value="technology">Technology</option>
                    <option value="manufacturing">Manufacturing</option>
                    <option value="education">Education</option>
                    <option value="other">Other</option>
                  </select>
                </div>
              </div>
            </div>

            <!-- Current Phone System Costs -->
            <div class="input-group">
              <h3>Current Phone System</h3>
              <div class="form-row">
                <div class="form-field">
                  <label for="currentStaff">Current Phone Staff</label>
                  <input type="number" id="currentStaff" min="0" placeholder="Number of staff">
                </div>
                <div class="form-field">
                  <label for="avgSalary">Average Staff Salary</label>
                  <input type="number" id="avgSalary" min="0" placeholder="Annual salary ($)">
                </div>
              </div>
              <div class="form-row">
                <div class="form-field">
                  <label for="phoneSystemCosts">Phone System Costs</label>
                  <input type="number" id="phoneSystemCosts" min="0" placeholder="Monthly costs ($)">
                </div>
                <div class="form-field">
                  <label for="otherCosts">Other Related Costs</label>
                  <input type="number" id="otherCosts" min="0" placeholder="Monthly costs ($)">
                </div>
              </div>
            </div>

            <!-- Call Volume & Performance -->
            <div class="input-group">
              <h3>Call Volume & Performance</h3>
              <div class="form-row">
                <div class="form-field">
                  <label for="dailyCalls">Daily Incoming Calls</label>
                  <input type="number" id="dailyCalls" min="0" placeholder="Average per day">
                </div>
                <div class="form-field">
                  <label for="avgCallDuration">Avg Call Duration</label>
                  <input type="number" id="avgCallDuration" min="0" placeholder="Minutes">
                </div>
              </div>
              <div class="form-row">
                <div class="form-field">
                  <label for="missedCallRate">Missed Call Rate</label>
                  <input type="number" id="missedCallRate" min="0" max="100" placeholder="Percentage (%)">
                </div>
                <div class="form-field">
                  <label for="avgCallValue">Avg Call Value</label>
                  <input type="number" id="avgCallValue" min="0" placeholder="Revenue per call ($)">
                </div>
              </div>
            </div>

            <!-- Business Hours -->
            <div class="input-group">
              <h3>Operating Hours</h3>
              <div class="form-row">
                <div class="form-field">
                  <label for="businessHours">Daily Business Hours</label>
                  <input type="number" id="businessHours" min="1" max="24" placeholder="Hours per day">
                </div>
                <div class="form-field">
                  <label for="businessDays">Business Days/Week</label>
                  <input type="number" id="businessDays" min="1" max="7" placeholder="Days per week">
                </div>
              </div>
              <div class="checkbox-field">
                <input type="checkbox" id="afterHours">
                <label for="afterHours">Need after-hours coverage?</label>
              </div>
            </div>

            <!-- Calculate Button -->
            <button id="calculateROI" class="calculate-btn">
              Calculate My ROI
            </button>
          </div>

          <!-- Results Panel -->
          <div class="results-panel">
            <h2>Your ROI Analysis</h2>
            <div id="resultsContent">
              <div class="placeholder-content">
                <div class="icon">üìä</div>
                <p>Enter your business information to see your detailed ROI analysis</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Features Section -->
    <section class="features-section">
      <div class="container">
        <h2>Why Use Our ROI Calculator?</h2>
        <div class="features-grid">
          <div class="feature-card">
            <div class="feature-icon">üéØ</div>
            <h3>Industry-Specific Analysis</h3>
            <p>Tailored calculations based on your industry's unique requirements, call patterns, and business metrics.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üìà</div>
            <h3>Multi-Year Projections</h3>
            <p>See your ROI projections over 3-5 years with compound savings and scalability benefits.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üí∞</div>
            <h3>Comprehensive Cost Modeling</h3>
            <p>Complete analysis including staff costs, system expenses, opportunity costs, and hidden savings.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">‚ö°</div>
            <h3>Efficiency Impact</h3>
            <p>Calculate improvements in call handling, response times, and customer satisfaction metrics.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üìä</div>
            <h3>Detailed Breakdowns</h3>
            <p>Granular analysis of cost centers, savings opportunities, and performance improvements.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üîç</div>
            <h3>Evidence-Based Results</h3>
            <p>Calculations based on real industry data, case studies, and proven implementation results.</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Implementation Guide -->
    <section class="guide-section">
      <div class="container">
        <h2>How to Use This Calculator</h2>
        <div class="guide-steps">
          <div class="step">
            <div class="step-number">1</div>
            <div class="step-content">
              <h3>Business Information</h3>
              <p>Enter your company size, industry, and basic operational details for accurate analysis.</p>
            </div>
          </div>
          <div class="step">
            <div class="step-number">2</div>
            <div class="step-content">
              <h3>Current Costs</h3>
              <p>Input your existing phone staff costs, system expenses, and related operational costs.</p>
            </div>
          </div>
          <div class="step">
            <div class="step-number">3</div>
            <div class="step-content">
              <h3>Call Metrics</h3>
              <p>Provide call volume, duration, missed call rates, and average call value for precise calculations.</p>
            </div>
          </div>
          <div class="step">
            <div class="step-number">4</div>
            <div class="step-content">
              <h3>Review Results</h3>
              <p>Get comprehensive ROI analysis with detailed breakdowns, projections, and implementation recommendations.</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer />

  <script>
    // Enhanced ROI Calculator Logic
    class ROICalculator {
      constructor() {
        this.bindEvents();
        this.setDefaults();
      }

      setDefaults() {
        // Set realistic defaults based on industry averages
        document.getElementById('currentStaff').value = '2';
        document.getElementById('avgSalary').value = '45000';
        document.getElementById('phoneSystemCosts').value = '300';
        document.getElementById('otherCosts').value = '200';
        document.getElementById('dailyCalls').value = '50';
        document.getElementById('avgCallDuration').value = '8';
        document.getElementById('missedCallRate').value = '15';
        document.getElementById('avgCallValue').value = '250';
        document.getElementById('businessHours').value = '10';
        document.getElementById('businessDays').value = '5';
      }

      bindEvents() {
        document.getElementById('calculateROI').addEventListener('click', () => {
          this.calculateROI();
        });
      }

      getInputValues() {
        return {
          businessSize: document.getElementById('businessSize').value,
          industry: document.getElementById('industry').value,
          currentStaff: parseInt(document.getElementById('currentStaff').value) || 0,
          avgSalary: parseInt(document.getElementById('avgSalary').value) || 0,
          phoneSystemCosts: parseInt(document.getElementById('phoneSystemCosts').value) || 0,
          otherCosts: parseInt(document.getElementById('otherCosts').value) || 0,
          dailyCalls: parseInt(document.getElementById('dailyCalls').value) || 0,
          avgCallDuration: parseInt(document.getElementById('avgCallDuration').value) || 0,
          missedCallRate: parseInt(document.getElementById('missedCallRate').value) || 0,
          avgCallValue: parseInt(document.getElementById('avgCallValue').value) || 0,
          businessHours: parseInt(document.getElementById('businessHours').value) || 0,
          businessDays: parseInt(document.getElementById('businessDays').value) || 0,
          afterHours: document.getElementById('afterHours').checked
        };
      }

      calculateCurrentCosts(inputs) {
        const annualStaffCosts = inputs.currentStaff * inputs.avgSalary;
        const annualSystemCosts = (inputs.phoneSystemCosts + inputs.otherCosts) * 12;
        const benefits = annualStaffCosts * 0.3; // 30% benefits
        const overhead = annualStaffCosts * 0.2; // 20% overhead
        
        return {
          staff: annualStaffCosts,
          benefits: benefits,
          overhead: overhead,
          system: annualSystemCosts,
          total: annualStaffCosts + benefits + overhead + annualSystemCosts
        };
      }

      calculateAICosts(inputs) {
        let baseAICost = 6000; // Annual base cost
        
        // Scale by business size
        switch (inputs.businessSize) {
          case 'medium':
            baseAICost = 15000;
            break;
          case 'enterprise':
            baseAICost = 35000;
            break;
        }

        // Add after-hours premium
        if (inputs.afterHours) {
          baseAICost *= 1.3;
        }

        // Add high-volume premium
        const annualCalls = inputs.dailyCalls * inputs.businessDays * 52;
        if (annualCalls > 50000) {
          baseAICost *= 1.2;
        }

        return {
          base: baseAICost,
          setup: baseAICost * 0.15, // 15% setup cost
          training: 2500, // One-time training
          total: baseAICost
        };
      }

      calculateOpportunityGains(inputs, currentCosts) {
        const annualCalls = inputs.dailyCalls * inputs.businessDays * 52;
        const missedCalls = annualCalls * (inputs.missedCallRate / 100);
        const recoveredRevenue = missedCalls * inputs.avgCallValue * 0.7; // 70% recovery rate
        
        // Efficiency gains
        const currentCallMinutes = annualCalls * inputs.avgCallDuration;
        const aiCallMinutes = annualCalls * (inputs.avgCallDuration * 0.6); // 40% faster
        const timeSaved = currentCallMinutes - aiCallMinutes;
        const timeSavedValue = (timeSaved / 60) * 25; // $25/hour value

        // Customer satisfaction improvements
        const satisfactionGain = currentCosts.total * 0.05; // 5% business growth

        return {
          recoveredRevenue: recoveredRevenue,
          timeSaved: timeSavedValue,
          satisfactionGain: satisfactionGain,
          total: recoveredRevenue + timeSavedValue + satisfactionGain
        };
      }

      calculateMultiYearProjection(annualSavings, opportunityGains) {
        const projections = [];
        let cumulativeSavings = 0;
        
        for (let year = 1; year <= 5; year++) {
          // Apply compound growth to opportunity gains
          const yearlyGains = opportunityGains * Math.pow(1.1, year - 1); // 10% compound growth
          const totalYearlySavings = annualSavings + yearlyGains;
          cumulativeSavings += totalYearlySavings;
          
          projections.push({
            year: year,
            savings: totalYearlySavings,
            cumulative: cumulativeSavings
          });
        }
        
        return projections;
      }

      getIndustryInsights(industry) {
        const insights = {
          healthcare: {
            callImportance: 'Critical',
            avgMissedImpact: '$500',
            specialConsiderations: 'HIPAA compliance, emergency protocols',
            bestFeatures: '24/7 availability, appointment scheduling, prescription refills'
          },
          legal: {
            callImportance: 'High',
            avgMissedImpact: '$750',
            specialConsiderations: 'Confidentiality, urgent case handling',
            bestFeatures: 'Intake screening, appointment scheduling, after-hours emergency'
          },
          realestate: {
            callImportance: 'High',
            avgMissedImpact: '$2,500',
            specialConsiderations: 'Lead qualification, showing schedules',
            bestFeatures: 'Lead capture, property inquiries, showing coordination'
          },
          financial: {
            callImportance: 'Critical',
            avgMissedImpact: '$1,200',
            specialConsiderations: 'Regulatory compliance, security protocols',
            bestFeatures: 'Account inquiries, appointment scheduling, fraud detection'
          },
          professional: {
            callImportance: 'High',
            avgMissedImpact: '$400',
            specialConsiderations: 'Professional image, client relationships',
            bestFeatures: 'Appointment scheduling, service inquiries, follow-ups'
          }
        };
        
        return insights[industry] || {
          callImportance: 'Medium',
          avgMissedImpact: '$300',
          specialConsiderations: 'Standard business protocols',
          bestFeatures: 'Call handling, message taking, basic inquiries'
        };
      }

      formatCurrency(amount) {
        return new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 0,
          maximumFractionDigits: 0
        }).format(amount);
      }

      formatPercentage(decimal) {
        return Math.round(decimal * 100) + '%';
      }

      calculateROI() {
        const inputs = this.getInputValues();
        
        // Calculate costs and savings
        const currentCosts = this.calculateCurrentCosts(inputs);
        const aiCosts = this.calculateAICosts(inputs);
        const opportunityGains = this.calculateOpportunityGains(inputs, currentCosts);
        
        const annualSavings = currentCosts.total - aiCosts.total;
        const totalBenefit = annualSavings + opportunityGains.total;
        const roi = totalBenefit / aiCosts.total;
        const paybackMonths = aiCosts.total / (totalBenefit / 12);
        
        const multiYear = this.calculateMultiYearProjection(annualSavings, opportunityGains.total);
        const industryInsights = this.getIndustryInsights(inputs.industry);

        // Generate results HTML
        this.displayResults({
          inputs,
          currentCosts,
          aiCosts,
          annualSavings,
          opportunityGains,
          totalBenefit,
          roi,
          paybackMonths,
          multiYear,
          industryInsights
        });
      }

      displayResults(data) {
        const resultsContent = document.getElementById('resultsContent');
        
        resultsContent.innerHTML = `
          <div class="results-summary">
            <div class="key-metric">
              <div class="metric-value">${this.formatCurrency(data.totalBenefit)}</div>
              <div class="metric-label">Annual Benefit</div>
            </div>
            <div class="key-metric">
              <div class="metric-value">${Math.round(data.roi * 100)}%</div>
              <div class="metric-label">ROI</div>
            </div>
            <div class="key-metric">
              <div class="metric-value">${Math.round(data.paybackMonths)}</div>
              <div class="metric-label">Payback (Months)</div>
            </div>
          </div>

          <div class="cost-comparison">
            <h3>Cost Comparison</h3>
            <div class="comparison-row">
              <span>Current Annual Costs:</span>
              <span class="cost-current">${this.formatCurrency(data.currentCosts.total)}</span>
            </div>
            <div class="comparison-row">
              <span>AI System Annual Costs:</span>
              <span class="cost-ai">${this.formatCurrency(data.aiCosts.total)}</span>
            </div>
            <div class="comparison-row savings">
              <span><strong>Annual Savings:</strong></span>
              <span class="cost-savings"><strong>${this.formatCurrency(data.annualSavings)}</strong></span>
            </div>
          </div>

          <div class="opportunity-gains">
            <h3>Additional Benefits</h3>
            <div class="gains-grid">
              <div class="gain-item">
                <span>Recovered Revenue:</span>
                <span>${this.formatCurrency(data.opportunityGains.recoveredRevenue)}</span>
              </div>
              <div class="gain-item">
                <span>Efficiency Value:</span>
                <span>${this.formatCurrency(data.opportunityGains.timeSaved)}</span>
              </div>
              <div class="gain-item">
                <span>Growth Impact:</span>
                <span>${this.formatCurrency(data.opportunityGains.satisfactionGain)}</span>
              </div>
            </div>
          </div>

          <div class="multi-year-projection">
            <h3>5-Year Projection</h3>
            <div class="projection-chart">
              ${data.multiYear.map(year => `
                <div class="projection-year">
                  <div class="year-label">Year ${year.year}</div>
                  <div class="year-savings">${this.formatCurrency(year.savings)}</div>
                  <div class="year-cumulative">Cumulative: ${this.formatCurrency(year.cumulative)}</div>
                </div>
              `).join('')}
            </div>
          </div>

          <div class="industry-insights">
            <h3>Industry Insights</h3>
            <div class="insights-grid">
              <div class="insight-item">
                <strong>Call Importance:</strong> ${data.industryInsights.callImportance}
              </div>
              <div class="insight-item">
                <strong>Missed Call Impact:</strong> ${data.industryInsights.avgMissedImpact}
              </div>
              <div class="insight-item">
                <strong>Key Considerations:</strong> ${data.industryInsights.specialConsiderations}
              </div>
              <div class="insight-item">
                <strong>Recommended Features:</strong> ${data.industryInsights.bestFeatures}
              </div>
            </div>
          </div>

          <div class="next-steps">
            <h3>Next Steps</h3>
            <div class="steps-list">
              <div class="step-item">1. Review your detailed analysis above</div>
              <div class="step-item">2. Download your custom ROI report</div>
              <div class="step-item">3. Schedule a demo to see AI phone agents in action</div>
              <div class="step-item">4. Plan your implementation timeline</div>
            </div>
            <div class="cta-buttons">
              <button class="btn-primary" onclick="window.print()">Download Report</button>
              <a href="/demo/" class="btn-secondary">Schedule Demo</a>
            </div>
          </div>
        `;
      }
    }

    // Initialize calculator when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      new ROICalculator();
    });
  </script>

  <style>
    /* Hero Section */
    .hero-section {
      background: linear-gradient(135deg, var(--color-dark-400) 0%, var(--color-dark-300) 100%);
      padding: 6rem 0 4rem;
      text-align: center;
    }

    .hero-content h1 {
      font-size: 3.5rem;
      font-weight: 800;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, var(--color-neon-blue) 0%, var(--color-neon-cyan) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero-description {
      font-size: 1.25rem;
      color: var(--color-text-muted);
      margin-bottom: 2rem;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1.6;
    }

    .trust-indicators {
      display: flex;
      justify-content: center;
      gap: 2rem;
      flex-wrap: wrap;
      font-size: 1rem;
      color: var(--color-text);
    }

    .trust-indicators span {
      color: var(--color-neon-cyan);
      font-weight: 500;
    }

    /* Calculator Section */
    .calculator-section {
      padding: 4rem 0;
      background: var(--color-dark-300);
    }

    .calculator-wrapper {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3rem;
      max-width: 1400px;
      margin: 0 auto;
    }

    .input-panel, .results-panel {
      background: var(--color-dark-200);
      padding: 2.5rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .input-panel h2, .results-panel h2 {
      font-size: 2rem;
      margin-bottom: 2rem;
      color: var(--color-text);
      text-align: center;
    }

    /* Form Styling */
    .input-group {
      margin-bottom: 2rem;
      padding-bottom: 2rem;
      border-bottom: 1px solid rgba(0, 163, 255, 0.1);
    }

    .input-group:last-of-type {
      border-bottom: none;
      margin-bottom: 3rem;
    }

    .input-group h3 {
      color: var(--color-neon-cyan);
      font-size: 1.25rem;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .form-field {
      display: flex;
      flex-direction: column;
    }

    .form-field label {
      color: var(--color-text);
      margin-bottom: 0.5rem;
      font-weight: 500;
    }

    .form-field input, .form-field select {
      padding: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.3);
      border-radius: 0.5rem;
      background: var(--color-dark-300);
      color: var(--color-text);
      font-size: 1rem;
    }

    .form-field input:focus, .form-field select:focus {
      outline: none;
      border-color: var(--color-neon-blue);
      box-shadow: 0 0 10px rgba(0, 163, 255, 0.3);
    }

    .checkbox-field {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    .checkbox-field input[type="checkbox"] {
      width: 1.2rem;
      height: 1.2rem;
    }

    .checkbox-field label {
      color: var(--color-text);
      cursor: pointer;
    }

    .calculate-btn {
      width: 100%;
      padding: 1rem 2rem;
      background: linear-gradient(135deg, var(--color-neon-blue) 0%, var(--color-neon-cyan) 100%);
      color: white;
      border: none;
      border-radius: 0.5rem;
      font-size: 1.125rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .calculate-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(0, 163, 255, 0.4);
    }

    /* Results Panel */
    .placeholder-content {
      text-align: center;
      color: var(--color-text-muted);
      padding: 3rem 1rem;
    }

    .placeholder-content .icon {
      font-size: 4rem;
      margin-bottom: 1rem;
    }

    .results-summary {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .key-metric {
      text-align: center;
      padding: 1.5rem;
      background: var(--color-dark-300);
      border-radius: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.2);
    }

    .metric-value {
      font-size: 2rem;
      font-weight: 700;
      color: var(--color-neon-cyan);
      margin-bottom: 0.5rem;
    }

    .metric-label {
      color: var(--color-text-muted);
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .cost-comparison, .opportunity-gains, .multi-year-projection, .industry-insights, .next-steps {
      margin-bottom: 2rem;
      padding: 1.5rem;
      background: var(--color-dark-300);
      border-radius: 0.75rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
    }

    .cost-comparison h3, .opportunity-gains h3, .multi-year-projection h3, .industry-insights h3, .next-steps h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }

    .comparison-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem 0;
      border-bottom: 1px solid rgba(0, 163, 255, 0.1);
    }

    .comparison-row:last-child {
      border-bottom: none;
    }

    .comparison-row.savings {
      background: rgba(0, 229, 255, 0.1);
      margin: 1rem -1.5rem -1.5rem;
      padding: 1rem 1.5rem;
      border-radius: 0 0 0.75rem 0.75rem;
    }

    .cost-current {
      color: #ff6b6b;
      font-weight: 600;
    }

    .cost-ai {
      color: var(--color-neon-blue);
      font-weight: 600;
    }

    .cost-savings {
      color: var(--color-neon-cyan);
      font-weight: 700;
    }

    .gains-grid, .insights-grid {
      display: grid;
      gap: 0.75rem;
    }

    .gain-item, .insight-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem;
      background: var(--color-dark-400);
      border-radius: 0.5rem;
    }

    .projection-chart {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 1rem;
    }

    .projection-year {
      text-align: center;
      padding: 1rem;
      background: var(--color-dark-400);
      border-radius: 0.5rem;
    }

    .year-label {
      color: var(--color-text-muted);
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
    }

    .year-savings {
      color: var(--color-neon-cyan);
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .year-cumulative {
      color: var(--color-text-muted);
      font-size: 0.8rem;
    }

    .steps-list {
      margin-bottom: 1.5rem;
    }

    .step-item {
      color: var(--color-text);
      padding: 0.5rem 0;
      border-left: 3px solid var(--color-neon-blue);
      padding-left: 1rem;
      margin-bottom: 0.5rem;
    }

    .cta-buttons {
      display: flex;
      gap: 1rem;
    }

    .btn-primary, .btn-secondary {
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      font-weight: 600;
      text-decoration: none;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .btn-primary {
      background: var(--color-neon-blue);
      color: white;
      border: none;
    }

    .btn-secondary {
      background: transparent;
      color: var(--color-neon-cyan);
      border: 2px solid var(--color-neon-cyan);
    }

    .btn-primary:hover, .btn-secondary:hover {
      transform: translateY(-2px);
    }

    /* Features Section */
    .features-section {
      padding: 4rem 0;
      background: var(--color-dark-400);
    }

    .features-section h2 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 3rem;
      color: var(--color-text);
    }

    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .feature-card {
      background: var(--color-dark-200);
      padding: 2rem;
      border-radius: 1rem;
      border: 1px solid rgba(0, 163, 255, 0.1);
      transition: all 0.3s ease;
    }

    .feature-card:hover {
      border-color: rgba(0, 163, 255, 0.3);
      transform: translateY(-5px);
    }

    .feature-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .feature-card h3 {
      color: var(--color-text);
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }

    .feature-card p {
      color: var(--color-text-muted);
      line-height: 1.6;
    }

    /* Guide Section */
    .guide-section {
      padding: 4rem 0;
      background: var(--color-dark-300);
    }

    .guide-section h2 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 3rem;
      color: var(--color-text);
    }

    .guide-steps {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
    }

    .step {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
    }

    .step-number {
      width: 3rem;
      height: 3rem;
      background: linear-gradient(135deg, var(--color-neon-blue) 0%, var(--color-neon-cyan) 100%);
      color: white;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      font-size: 1.25rem;
      flex-shrink: 0;
    }

    .step-content h3 {
      color: var(--color-text);
      margin-bottom: 0.5rem;
      font-size: 1.25rem;
    }

    .step-content p {
      color: var(--color-text-muted);
      line-height: 1.6;
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .calculator-wrapper {
        grid-template-columns: 1fr;
        gap: 2rem;
      }

      .form-row {
        grid-template-columns: 1fr;
      }

      .results-summary {
        grid-template-columns: 1fr;
      }

      .projection-chart {
        grid-template-columns: repeat(2, 1fr);
      }

      .hero-content h1 {
        font-size: 2.5rem;
      }

      .trust-indicators {
        flex-direction: column;
        gap: 1rem;
      }

      .cta-buttons {
        flex-direction: column;
      }
    }
  </style>
</Layout>