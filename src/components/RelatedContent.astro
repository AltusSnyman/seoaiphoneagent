---
export interface RelatedItem {
  title: string;
  href: string;
  type: 'industry' | 'location' | 'blog' | 'service' | 'guide';
  description?: string;
}

interface Props {
  items: RelatedItem[];
  title?: string;
  layout?: 'horizontal' | 'vertical';
}

const { 
  items = [], 
  title = "Related Resources",
  layout = 'horizontal'
} = Astro.props;

// Icon mapping for different content types
const typeIcons = {
  industry: 'üè¢',
  location: 'üìç', 
  blog: 'üìù',
  service: 'üîß',
  guide: 'üìö'
};

// Type labels for better UX
const typeLabels = {
  industry: 'Industry Guide',
  location: 'Location Info',
  blog: 'Blog Article',
  service: 'Service',
  guide: 'How-to Guide'
};
---

<section class={`related-content ${layout}`}>
  <div class="related-header">
    <h3 class="related-title">{title}</h3>
  </div>
  
  <div class="related-grid">
    {items.map((item) => (
      <a href={item.href} class="related-item">
        <span class="item-icon">{typeIcons[item.type]}</span>
        <div class="item-content">
          <span class="item-type">{typeLabels[item.type]}</span>
          <h4 class="item-title">{item.title}</h4>
          {item.description && (
            <p class="item-description">{item.description}</p>
          )}
        </div>
        <span class="item-arrow">‚Üí</span>
      </a>
    ))}
  </div>
</section>

<style>
  .related-content {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(0, 163, 255, 0.1);
    border-radius: 0.75rem;
    padding: 2rem;
    margin: 2rem 0;
  }

  .related-header {
    margin-bottom: 1.5rem;
  }

  .related-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .related-title::before {
    content: '';
    width: 4px;
    height: 20px;
    background: linear-gradient(180deg, var(--color-neon-blue), var(--color-neon-cyan));
    border-radius: 2px;
  }

  .related-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .related-content.horizontal .related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .related-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 0.5rem;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
    position: relative;
  }

  .related-item:hover {
    background: rgba(0, 163, 255, 0.05);
    border-color: rgba(0, 163, 255, 0.2);
    transform: translateX(4px);
  }

  .related-content.horizontal .related-item {
    flex-direction: column;
    align-items: flex-start;
    text-align: left;
  }

  .related-content.horizontal .related-item:hover {
    transform: translateY(-4px);
  }

  .item-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .item-content {
    flex: 1;
    min-width: 0;
  }

  .item-type {
    display: inline-block;
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--color-neon-blue);
    background: rgba(0, 163, 255, 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .item-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0 0 0.25rem 0;
    line-height: 1.4;
  }

  .related-content.horizontal .item-title {
    font-size: 1rem;
  }

  .item-description {
    font-size: 0.75rem;
    color: var(--color-text-muted);
    margin: 0;
    line-height: 1.4;
  }

  .related-content.horizontal .item-description {
    font-size: 0.875rem;
  }

  .item-arrow {
    font-size: 1rem;
    color: var(--color-text-muted);
    flex-shrink: 0;
    transition: all 0.3s ease;
  }

  .related-content.horizontal .item-arrow {
    align-self: flex-end;
    margin-top: auto;
  }

  .related-item:hover .item-arrow {
    color: var(--color-neon-blue);
    transform: translateX(4px);
  }

  .related-content.horizontal .related-item:hover .item-arrow {
    transform: translateX(0) translateY(0) rotate(45deg);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .related-content {
      padding: 1.5rem;
      margin: 1.5rem 0;
    }

    .related-content.horizontal .related-grid {
      grid-template-columns: 1fr;
    }

    .related-item {
      padding: 0.75rem;
    }

    .item-title {
      font-size: 0.875rem;
    }
  }
</style>